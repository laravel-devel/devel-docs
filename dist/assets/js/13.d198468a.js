(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{212:function(s,e,t){"use strict";t.r(e);var a=t(28),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"users-permissions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#users-permissions"}},[s._v("#")]),s._v(" Users & Permissions")]),s._v(" "),t("p",[s._v("Devel comes with a user roles and permissions backend. The default "),t("code",[s._v("User")]),s._v(" class is located in the "),t("code",[s._v("Devel\\Core\\Entities\\Auth")]),s._v(" namespace. You will also find a "),t("code",[s._v("Role")]),s._v(" and a "),t("code",[s._v("Permission")]),s._v(" class there.")]),s._v(" "),t("h2",{attrs:{id:"relations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#relations"}},[s._v("#")]),s._v(" Relations")]),s._v(" "),t("p",[s._v("Each user can have multiple roles. Besides the permissions a user gets via the assigned roles, each user can be granted multiple personal permissions.")]),s._v(" "),t("p",[s._v("The "),t("code",[s._v("User")]),s._v(" class relations are:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("->roles")]),s._v(" - get the list of a user's roles")]),s._v(" "),t("li",[t("code",[s._v("->permissions")]),s._v(" - get the list of a user's personal permissions")])]),s._v(" "),t("p",[s._v("The "),t("code",[s._v("Role")]),s._v(" class relations are:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("->permissions")]),s._v(" - get the list of a permissions that the role grants")])]),s._v(" "),t("h2",{attrs:{id:"checking-for-permissions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checking-for-permissions"}},[s._v("#")]),s._v(" Checking for Permissions")]),s._v(" "),t("p",[s._v("You can call the "),t("code",[s._v("hasPermissions()")]),s._v(" method on both "),t("code",[s._v("User")]),s._v(" and "),t("code",[s._v("Role")]),s._v(" classes. The accepted arguments are:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("'single_permission_name'")]),s._v(" - a string, a permission name")]),s._v(" "),t("li",[t("code",[s._v("['permission_one', 'permission_two']")]),s._v(" - an array of permission names. Each permission will have to be granted for the method to return "),t("code",[s._v("true")]),s._v(" in this case")]),s._v(" "),t("li",[t("code",[s._v("'(permission_one || permission_two) && permission_three'")]),s._v(" - a string, a logical expression with permission names in place of variables")])]),s._v(" "),t("p",[s._v("All the available methods:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("hasPermissions()")]),s._v(" - checks whether a user has a permission(s) granted to them via a role or directly. In case of roles it simply checks if a role has a permission granted to it.")]),s._v(" "),t("li",[t("code",[s._v("hasPersonalPermission()")]),s._v(" - checks whether a user has a personal permission. Accepts a single permission name (string) as the only argument.")]),s._v(" "),t("li",[t("code",[s._v("hasPermissionViaRole()")]),s._v(" - checks whether a user has a permission granted via any role assigned to them. Accepts a single permission name (string) as the only argument.")])]),s._v(" "),t("h2",{attrs:{id:"route-permissions"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#route-permissions"}},[s._v("#")]),s._v(" Route Permissions")]),s._v(" "),t("p",[s._v("Both dashboard and public routes can be protected by permissions. To do that you need to set the "),t("code",[s._v("permissions")]),s._v(" argument when declaring a root. For example:")]),s._v(" "),t("div",{staticClass:"language-php extra-class"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[s._v("Route"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'/settings'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'as'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'site.settings.edit'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'uses'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'SettingsController@edit'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'permissions'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[s._v("'site.edit_settings'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("The values you can pass to the "),t("code",[s._v("permissions")]),s._v(" argument are the same kind of values you can pass to the "),t("code",[s._v("hasPermissions()")]),s._v(" method.")])])}),[],!1,null,null,null);e.default=n.exports}}]);